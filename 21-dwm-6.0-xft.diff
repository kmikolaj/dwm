--- a/dwm.c	2011-12-19 10:02:46.000000000 -0500
+++ b/dwm.c	2012-03-30 10:29:25.156110278 -0400
@@ -39,6 +39,7 @@
 #ifdef XINERAMA
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
+#include <X11/Xft/Xft.h> /* XFT */
 
 /* macros */
 #define BUTTONMASK              (ButtonPressMask|ButtonReleaseMask)
@@ -108,7 +109,7 @@
 		int descent;
 		int height;
 		XFontSet set;
-		XFontStruct *xfont;
+		XftFont *xfont;
 	} font;
 } DC; /* draw context */
 
@@ -485,10 +486,7 @@
 	for(m = mons; m; m = m->next)
 		while(m->stack)
 			unmanage(m->stack, False);
-	if(dc.font.set)
-		XFreeFontSet(dpy, dc.font.set);
-	else
-		XFreeFont(dpy, dc.font.xfont);
+
 	XUngrabKey(dpy, AnyKey, AnyModifier, root);
 	XFreePixmap(dpy, dc.drawable);
 	XFreeGC(dpy, dc.gc);
@@ -792,6 +790,22 @@

	XSetForeground(dpy, dc.gc, col[ColBG]);
	XFillRectangle(dpy, dc.drawable, dc.gc, dc.x, dc.y, dc.w, dc.h);
+
+	/*
+	 *	Color assignment and conversion to Xft's coloring
+	 */
+
+	XftColor color;
+	color.color.red = ((col[ColFG]  & 0xFF0000) >> 16 )* 0x101;
+	color.color.green = ((col[ColFG]  & 0x00FF00) >> 8 )* 0x101;
+	color.color.blue = ((col[ColFG]  & 0x0000FF) )* 0x101;
+	color.color.alpha = 0xFFFF;
+	color.pixel = 0xFFFFFF00;
+	Colormap cmap = DefaultColormap(dpy, screen);
+
+	XftColorAllocValue(dpy, DefaultVisual(dpy, screen), cmap, &color.color, &color);
+	XftDraw *draw = XftDrawCreate(dpy, dc.drawable, DefaultVisual(dpy, screen), cmap);
+
 	if(!text)
 		return;
 	olen = strlen(text);
@@ -805,11 +819,10 @@
 	memcpy(buf, text, len);
 	if(len < olen)
 		for(i = len; i && i > len - 3; buf[--i] = '.');
-	XSetForeground(dpy, dc.gc, col[ColFG]);
-	if(dc.font.set)
-		XmbDrawString(dpy, dc.drawable, dc.font.set, dc.gc, x, y, buf, len);
-	else
-		XDrawString(dpy, dc.drawable, dc.gc, x, y, buf, len);
+
+	XftDrawStringUtf8(draw, &color, dc.font.xfont, x, y, (XftChar8 *)buf, len);
+
+	free(draw);
 }
 
 void
@@ -1057,8 +1070,8 @@
 		}
 	}
 	else {
-		if(!(dc.font.xfont = XLoadQueryFont(dpy, fontstr))
-		&& !(dc.font.xfont = XLoadQueryFont(dpy, "fixed")))
+		if(!(dc.font.xfont = XftFontOpenXlfd(dpy,screen, fontstr))
+		&& !(dc.font.xfont = XftFontOpenXlfd(dpy,screen, "fixed")))
 			die("error, cannot load font: '%s'\n", fontstr);
 		dc.font.ascent = dc.font.xfont->ascent;
 		dc.font.descent = dc.font.xfont->descent;
@@ -1621,8 +1634,6 @@
 	dc.drawable = XCreatePixmap(dpy, root, DisplayWidth(dpy, screen), bh, DefaultDepth(dpy, screen));
 	dc.gc = XCreateGC(dpy, root, 0, NULL);
 	XSetLineAttributes(dpy, dc.gc, 1, LineSolid, CapButt, JoinMiter);
-	if(!dc.font.set)
-		XSetFont(dpy, dc.gc, dc.font.xfont->fid);
 	/* init bars */
 	updatebars();
 	updatestatus();
@@ -1693,22 +1704,25 @@
	char *ptr = (char *)text, buf[len+1];
	unsigned int i, ibuf, lenbuf = len;
	XRectangle r;
+	XGlyphInfo ext;

	for(i = 0, ibuf = 0; *ptr && i < len; i++, ptr++) {
		if(*ptr <= MAXCOLORS && *ptr > 0) {
			if(i < len) { lenbuf--; }
		} else {
			buf[ibuf] = *ptr;
			ibuf++;
		}
	}
	buf[ibuf]=0;

	if(dc.font.set) {
		XmbTextExtents(dc.font.set, buf, lenbuf, NULL, &r);
		return r.width;
	}
-	return XTextWidth(dc.font.xfont, buf, lenbuf);
+
+	XftTextExtentsUtf8(dpy, dc.font.xfont, (XftChar8 *)text, len, &ext);
+	return ext.xOff;
 }
 
 void
--- a/config.mk	2011-12-19 10:02:46.000000000 -0500
+++ b/config.mk	2012-03-30 11:32:31.768929769 -0400
@@ -14,9 +14,13 @@
 XINERAMALIBS = -L${X11LIB} -lXinerama
 XINERAMAFLAGS = -DXINERAMA
 
+# Xft
+XFTLIBS = `pkg-config --libs xft`
+XFTINC = `pkg-config --cflags  xft`
+
 # includes and libs
-INCS = -I. -I/usr/include -I${X11INC}
+INCS = -I. -I/usr/include -I${X11INC} ${XFTINC}
-LIBS = -L/usr/lib -lc -L${X11LIB} -lX11 ${XINERAMALIBS}
+LIBS = -L/usr/lib -lc -L${X11LIB} -lX11 ${XINERAMALIBS} ${XFTLIBS}
 
 # flags
 CPPFLAGS = -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
